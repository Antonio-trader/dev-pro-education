variable "image_id" {
  type            = string
  description     = "The id of the machine image (AMI) to use for the server."
  default         = "ami-047e03b8591f2d48a"
}

variable "instance_type" {
  type            = string
  default         = "t2.micro"
}

variable "cidr_block_for_vpc" {
  type            = string
  default         = "192.168.0.0/16"
}

variable "cidr_block_for_public_subnet" {
  type            = string
  default         = "192.168.100.0/24"
}

variable "key_name" {
  type            = string
  default         = "Dnipro-KP"
}

#----------------------------------------------

provider "aws" {
  region          = "eu-central-1"
}

resource "aws_vpc" "vpc_for_dev_pro" {
  cidr_block = var.cidr_block_for_vpc
  tags = {
    Name = "vpc_for_dev_pro"
  }
}

resource "aws_subnet" "dev_pro_public" {
  cidr_block        = var.cidr_block_for_public_subnet
  vpc_id            = aws_vpc.vpc_for_dev_pro.id
  availability_zone = "eu-central-1a"
  tags = {
    Name = "dev_pro_public"
  }
}

resource "aws_internet_gateway" "my_vpc_igw" {
  vpc_id = aws_vpc.vpc_for_dev_pro.id

  tags = {
    Name = "My VPC - Internet Gateway"
  }
}

resource "aws_route_table" "my_vpc_eu_central_1a_public" {
  vpc_id = aws_vpc.vpc_for_dev_pro.id

  route {
    cidr_block = "0.0.0.0/0"
    gateway_id = aws_internet_gateway.my_vpc_igw.id
  }

  tags = {
    Name = "Public Subnet Route Table."
  }
}

resource "aws_route_table_association" "eu_central_1a_public" {
  subnet_id = aws_subnet.dev_pro_public.id
  route_table_id = aws_route_table.my_vpc_eu_central_1a_public.id
}

resource "aws_security_group" "ssh-http-allowed" {
  vpc_id = aws_vpc.vpc_for_dev_pro.id
  egress {
    from_port = 0
    protocol  = -1
    to_port   = 0
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port = 22
    protocol  = "tcp"
    to_port   = 22
    cidr_blocks = ["0.0.0.0/0"]
  }

  ingress {
    from_port = 80
    protocol  = "tcp"
    to_port   = 80
    cidr_blocks = ["0.0.0.0/0"]
  }
}

resource "aws_instance" "app_server" {
  ami                     = var.image_id
  instance_type           = var.instance_type
  user_data               = file("user_data.sh")
  subnet_id               = "${aws_subnet.dev_pro_public.id}"
  vpc_security_group_ids  = ["${aws_security_group.ssh-http-allowed.id}"]
  key_name                = var.key_name
  associate_public_ip_address = true

  tags = {
    Name          = "My Instance"
  }
}

output "instance_public_ip" {
  value = "${aws_instance.app_server.public_ip}"
}